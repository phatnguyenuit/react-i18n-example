{"version":3,"sources":["logo.svg","App.tsx","reportWebVitals.ts","i18n.ts","index.tsx"],"names":["App","useTranslation","t","i18n","changeLanguage","useCallback","lng","className","src","logo","alt","Trans","i18nKey","href","target","rel","defaultValue","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","process","interpolation","escapeValue","backend","loadPath","ReactDOM","render","StrictMode","fallback","document","getElementById"],"mappings":"oPAAe,MAA0B,iC,MCwC1BA,MAlCf,WAAgB,IAAD,EACOC,cAAZC,EADK,EACLA,EAAGC,EADE,EACFA,KACLC,EAAiBC,uBACrB,SAACC,GAAD,OAAS,WACPH,EAAKC,eAAeE,MAEtB,CAACH,IAEH,OACE,qBAAKI,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,4BACE,eAACC,EAAA,EAAD,CAAOC,QAAQ,cAAf,kBACO,+CADP,4BAIF,mBACEL,UAAU,WACVM,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,SAMGb,EAAE,QAAS,CAAEc,aAAc,kBAE9B,sBAAKT,UAAU,mBAAf,UACE,wBAAQU,QAASb,EAAe,MAAhC,gBACA,wBAAQa,QAASb,EAAe,MAAhC,yBCnBKc,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,+BCAdhB,IAGGwB,IAAIC,KAGJD,IAAIE,KAEJF,IAAIG,KAGJC,KAAK,CACJC,YAAa,KACbC,OAAOC,EAEPC,cAAe,CACbC,aAAa,GAEfC,QAAS,CACPC,SAAU,mCAIDnC,EAAf,ECzBAoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,WAAD,CAAUC,SAAS,aAAnB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1B1B,M","file":"static/js/main.9956e4d7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useCallback } from 'react';\nimport { useTranslation, Trans } from 'react-i18next';\n\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  const { t, i18n } = useTranslation();\n  const changeLanguage = useCallback(\n    (lng) => () => {\n      i18n.changeLanguage(lng);\n    },\n    [i18n],\n  );\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          <Trans i18nKey=\"description\">\n            Edit <code>src/App.tsx</code> and save to reload.\n          </Trans>\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {t('title', { defaultValue: 'Learn React' })}\n        </a>\n        <div className=\"language-section\">\n          <button onClick={changeLanguage('en')}>en</button>\n          <button onClick={changeLanguage('vi')}>vi</button>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// don't want to use this?\n// have a look at the Quick start guide\n// for passing in lng and translations on init\n\ni18n\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-http-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: 'en',\n    debug: process.env.NODE_ENV === 'development',\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n    backend: {\n      loadPath: './locales/{{lng}}/{{ns}}.json',\n    },\n  });\n\nexport default i18n;\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './i18n';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Suspense fallback=\"Loading...\">\n      <App />\n    </Suspense>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}